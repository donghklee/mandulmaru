#include <DHT.h>
#include <LiquidCrystal_I2C.h>
#define DHTPIN 5
#define DHTTYPE DHT11
DHT dht(DHTPIN, DHTTYPE);
LiquidCrystal_I2C lcd(0x27, 20, 4);
#define encoder0PinA 3 //DT
#define encoder0PinB 2 //CLK
#define encoder0Btn 4 //SW
int encoder0Pos = 0;
 
 
int button = 7;
int motor1 = 8;
int motor2 = 9;
int motor3 = 10;
int motor4 = 11;
int led = 12;
int fan = 13;
 
unsigned long time1;
unsigned long time2;
int TimeFlag = 0;
unsigned long readTime;
 
 
void setup() {
  Serial.begin(9600);
  pinMode(button, INPUT_PULLUP);
  pinMode(led, OUTPUT);
  pinMode(fan, OUTPUT);
  pinMode(motor1, OUTPUT);
  pinMode(motor2, OUTPUT);
  pinMode(motor3, OUTPUT);
  pinMode(motor4, OUTPUT);
  dht.begin();
  lcd.init();
  lcd.backlight();
  lcd.setCursor(0, 0);
  lcd.clear();
  lcd.init();
  lcd.backlight();
  lcd.setCursor(0, 0);
  lcd.print("NUMBER ");
 
  pinMode(encoder0PinA, INPUT_PULLUP);
  pinMode(encoder0PinB, INPUT_PULLUP);
  pinMode(encoder0Btn, INPUT_PULLUP);
  attachInterrupt(0, doEncoder, CHANGE);
}
int valRotary, lastValRotary;
int RotValue = 0;
int preRotValue = 0;
int bottleNum;
int amountNum;
int checkNum = 0;
 
 
 
void loop() {
  controlFan();
  showLCDNew();
  motorON();
  
}
 
void TimeCheck() {
  time1 = millis();
  if (TimeFlag == 0) {
    time2 = time1;
    TimeFlag = 1;
  }
  else if (TimeFlag == 1) {
    readTime = time1 - time2;
    Serial.print("readTime:");
    Serial.println(readTime);
  }
}
 
void motorStopTime(int motorNm, int tck) {
  Serial.print(motorNm);
 
  Serial.println("Motor ON!");
  while (readTime <= tck) {
    TimeCheck();
    digitalWrite(motorNm, HIGH);
  }
  if (readTime >= tck && TimeFlag == 1) {
    readTime = 0;
    TimeFlag = 0;
    digitalWrite(motorNm, LOW);
  }
}

void motorON() {
 if (checkNum == 1) {
   if (bottleNum == 1) {
     switch (amountNum) {
       case 1:
         motorStopTime(motor1, 2385);
         amountNum = 0;
         break;
       case 2:
         motorStopTime(motor1, 2385);
         amountNum = 0;
         break;
       case 3:
         motorStopTime(motor1, 4770);
         amountNum = 0;
         break;
       case 4:
         motorStopTime(motor1, 7155);
         amountNum = 0;
         break;
       case 5:
         motorStopTime(motor1, 4770);
         amountNum = 0;
         break;
       case 6:
         motorStopTime(motor1, 9540);
         amountNum = 0;
          break;
        case 7:
          motorStopTime(motor1, 19080);
          amountNum = 0;
          break;
        case 8:
          motorStopTime(motor1, 28620);
          amountNum = 0;
          break;
      }
    }
    else if (bottleNum == 2) {
      switch (amountNum) {
        case 1:
          motorStopTime(motor2, 2385);
          amountNum = 0;
          break;
        case 2:
          motorStopTime(motor2, 2385);
          amountNum = 0;
          break;
        case 3:
          motorStopTime(motor2, 4770);
          amountNum = 0;
          break;
        case 4:
          motorStopTime(motor2, 7155);
          amountNum = 0;
          break;
        case 5:
          motorStopTime(motor2, 4770);
          amountNum = 0;
          break;
        case 6:
          motorStopTime(motor2, 9540);
          amountNum = 0;
          break;
        case 7:
          motorStopTime(motor2, 19080);
          amountNum = 0;
          break;
        case 8:
          motorStopTime(motor2, 28620);
          amountNum = 0;
          break;
      }
    }
    else if (bottleNum == 3) {
      switch (amountNum) {
        case 1:
          motorStopTime(motor3, 2385);
          amountNum = 0;
          break;
        case 2:
          motorStopTime(motor3, 2385);
          amountNum = 0;
          break;
        case 3:
          motorStopTime(motor3, 4770);
          amountNum = 0;
          break;
        case 4:
          motorStopTime(motor3, 7155);
          amountNum = 0;
          break;
        case 5:
          motorStopTime(motor3, 4770);
          amountNum = 0;
          break;
        case 6:
          motorStopTime(motor3, 9540);
          amountNum = 0;
          break;
        case 7:
          motorStopTime(motor3, 19080);
          amountNum = 0;
          break;
        case 8:
          motorStopTime(motor3, 28620);
          amountNum = 0;
          break;
      }
    }
    else if (bottleNum == 4) {
      switch (amountNum) {
        case 1:
          motorStopTime(motor4, 2385);
          amountNum = 0;
          break;
        case 2:
          motorStopTime(motor4, 2385);
          amountNum = 0;
          break;
        case 3:
          motorStopTime(motor4, 4770);
          amountNum = 0;
          break;
        case 4:
          motorStopTime(motor4, 7155);
          amountNum = 0;
          break;
        case 5:
          motorStopTime(motor4, 4770);
          amountNum = 0;
          break;
        case 6:
          motorStopTime(motor4, 9540);
          amountNum = 0;
          break;
        case 7:
          motorStopTime(motor4, 19080);
          amountNum = 0;
          break;
        case 8:
          motorStopTime(motor4, 28620);
          amountNum = 0;
          break;
      }
    }
  }
  else if (checkNum == 0) {
    digitalWrite(motor1, LOW);
    digitalWrite(motor2, LOW);
    digitalWrite(motor3, LOW);
    digitalWrite(motor4, LOW);
  }
}
 
 
void amount(int Num) {
  switch (Num) {
    case 1:
      lcd.setCursor(0, 1);
      lcd.print("1/2 TEASPOON");
      break;
    case 2:
      lcd.setCursor(0, 1);
      lcd.print("1 TEASPOON    ");
      break;
    case 3:
      lcd.setCursor(0, 1);
      lcd.print("2 TEASPOON   ");
      break;
    case 4:
      lcd.setCursor(0, 1);
      lcd.print("3 TEASPOON   ");
      break;
    case 5:
      lcd.setCursor(0, 1);

      lcd.print("1/2 SPOON     ");
      break;
    case 6:
      lcd.setCursor(0, 1);
      lcd.print("1 SPOON      ");
      break;
    case 7:
      lcd.setCursor(0, 1);
      lcd.print("2 SPOON     ");
      break;
    case 8:
      lcd.setCursor(0, 1);
      lcd.print("3 SPOON     ");
      break;
  }
}
 
 
 
 
int valueEncoder = 0;
int valueBottle = 0;
int BottleFlag = 0;
 
void bottle(int Encoder) {
  lcd.setCursor(7, 0);
  lcd.print("                ");
  lcd.setCursor(7, 0);
  lcd.print(Encoder);
}
 
void menuSelectNum(int num1, int num2) {
  if (valueEncoder < num1) {
    valueEncoder = 4;
  }
  else if (valueEncoder > num2) {
    valueEncoder = 1;
  }
}
 
 
 
void showLCDNew() {
  if (BottleFlag == 0) {
    while (digitalRead(button) == LOW) {
      valueBottle = valueEncoder;
      BottleFlag = 1;
      checkNum = 0;
    }
  }
  
  if (BottleFlag == 1) {
    while (digitalRead(button) == LOW) {
      BottleFlag = 2;
      checkNum = 1;
    }
  }
  if (BottleFlag == 2) {
    while (digitalRead(button) == LOW) {
      BottleFlag = 0;
      checkNum = 0;
    }
  }
 
  if (BottleFlag == 0) {
    menuSelectNum(1, 4);
    lcd.setCursor(0, 1);
    lcd.print("                ");
    lcd.setCursor(0, 2);
    lcd.print("                ");
  }
  else if (BottleFlag == 1) {
    menuSelectNum(1, 8);
    amount(valueEncoder);
    amountNum = valueEncoder;
  }
 
  int btn = digitalRead(encoder0Btn);
 
  if (lastValRotary != valRotary) {
    if (BottleFlag == 0) {
      //bottle(valueEncoder);
      lcd.setCursor(7, 0);
      lcd.print("                ");
      lcd.setCursor(7, 0);
      lcd.print(valueEncoder);
      bottleNum = valueEncoder;
    }
  }
 

  if (BottleFlag == 2) {
    lcd.setCursor(0, 2);
    lcd.print("SEASONING ON...");
    digitalWrite(led, HIGH);
 

  }
  else {
    digitalWrite(led, LOW);
  }
 

 

 
  if (valRotary > lastValRotary) {
    valueEncoder = valueEncoder + 1;
  }
  if (valRotary < lastValRotary) {
    valueEncoder = valueEncoder - 1;
  }
  lastValRotary = valRotary;
}

 
void doEncoder() {
  if (digitalRead(encoder0PinA) == digitalRead(encoder0PinB)) {
    encoder0Pos++;
  }
  else {
    encoder0Pos--;
  }
  //valRotary = encoder0Pos/2.5;
  valRotary = encoder0Pos / 10;
}

 

 


void controlFan() {
  float humi = dht.readHumidity();
  Serial.println(humi);
  if (humi > 20

  
  ) {
    digitalWrite(fan, HIGH);
  }
  else {
    digitalWrite(fan, LOW);
  }
}
